//
// GRID
//


// -------------------------------------------------------------
// # Variables - To alter grid see settings.scss
// -------------------------------------------------------------

$grid-base-outer-width:     (($grid-base-col-width * $grid-cols) + ($grid-base-gutter-width * ($grid-cols - 1)));
$grid-col-width:            percentage($grid-base-col-width / $grid-base-outer-width);
$grid-gutter-width:         percentage($grid-base-gutter-width / $grid-base-outer-width);


// -------------------------------------------------------------
// # Standard grid
// -------------------------------------------------------------

// Columns mixin
// Used in loop to create classes
@mixin col($cols) {
    width: ($grid-col-width + $grid-gutter-width) * $cols - $grid-gutter-width;
}

// Generate classes for each col
// eg: .col-4
@for $i from 1 to ($grid-cols + 1) {
    .col-#{$i}{
        @include col($i);
    }
}

[class*='col-'] {
    margin-right: $grid-gutter-width;
    float: left;
}

[class*='col-']:last-child {
    margin-right: 0;
}


// -------------------------------------------------------------
// # Offsets
// -------------------------------------------------------------

@mixin offset($offsets) {
    margin-left: ($grid-col-width + $grid-gutter-width) * $offsets;
}

@for $i from 1 to ($grid-cols + 1) {
    .offset-#{$i}{
        @include offset($i);
    }
}


// -------------------------------------------------------------
// # Media query specific grid
// -------------------------------------------------------------

// Tablet = 768px to 1023px
// eg: .col-4-t
@include bp(tablet) {

    @for $i from 1 to ($grid-cols + 1) {
        .col-#{$i}-t{
            @include col($i);
        }
    }
}

// Desktop = 1024px and up
// eg: .col-4-d
@include bp(desktop) {

    @for $i from 1 to ($grid-cols + 1) {
        .col-#{$i}-d{
            @include col($i);
        }
    }
}

// Wide = 1240px and up
// eg: .col-4-w
@include bp(wide) {

    @for $i from 1 to ($grid-cols + 1) {
        .col-#{$i}-w{
            @include col($i);
        }
    }
}


// -------------------------------------------------------------
// # Multirow columns without .row
// -------------------------------------------------------------

@include bp(phablet-only) {

    .col-6-p:nth-child(even),
    .col-3-p:nth-child(4n+4),
    .col-4-p:nth-child(3n+3) { margin-right: 0; }
}

@include bp(tablet-only) {

    .col-6-t:nth-child(even),
    .col-3-t:nth-child(4n+4),
    .col-4-t:nth-child(3n+3) { margin-right: 0; }
}
 
@include bp(desktop-only) {

    .col-6-d:nth-child(even),
    .col-3-d:nth-child(4n+4),
    .col-4-d:nth-child(3n+3) { margin-right: 0; }
}